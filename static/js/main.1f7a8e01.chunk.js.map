{"version":3,"sources":["components/BinaryGap.js","components/UI/Card.js","components/BGInput.js","App.js","index.js"],"names":["BinaryGap","props","binaryString","number","toString","tempCounter","zeroCounter","i","length","Card","className","children","BGInput","useState","enteredNumber","setEnteredNumber","inputRef","useRef","onSubmit","event","preventDefault","current","value","console","log","type","ref","App","ReactDOM","render","document","getElementById"],"mappings":"+QA6BeA,EA3BG,SAACC,GAKjB,IAJA,IAAMC,EAAeD,EAAME,OAAOC,SAAS,GACvCC,EAAc,EACdC,EAAc,EAETC,EAAI,EAAGA,EAAIL,EAAaM,OAAQD,IACf,MAApBL,EAAaK,IACfF,IAEsB,MAApBH,EAAaK,KACXF,EAAcC,IAChBA,EAAcD,GAEhBA,EAAc,GAIlB,OACE,qCACE,2DACA,6BAAKH,IACL,2DACA,6BAAKI,QClBIG,G,MAJF,SAACR,GACZ,OAAO,qBAAKS,UAAc,OAAL,WAAeT,EAAMS,WAAnC,SAAiDT,EAAMU,aC8BjDC,G,MA5BC,WACd,MAA0CC,mBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACMC,EAAWC,mBAQjB,OACE,qCACE,cAAC,EAAD,UACE,uBAAMC,SATU,SAACC,GACrBA,EAAMC,iBACNL,GAAkBC,EAASK,QAAQC,OACnCC,QAAQC,WAAWV,IAMf,UACE,sBAAKJ,UAAU,eAAf,8BAEE,uBAAOA,UAAU,QAAQe,KAAK,SAASC,IAAKV,OAE9C,wBAAQN,UAAU,iBAAiBe,KAAK,SAAxC,yBAKJ,cAAC,EAAD,CAAWtB,OAAQW,S,MCfVa,MATf,WACE,OACE,iCACE,4CACA,cAAC,EAAD,QCHNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1f7a8e01.chunk.js","sourcesContent":["import \"./BinaryGap.css\";\n\nconst BinaryGap = (props) => {\n  const binaryString = props.number.toString(2);\n  let tempCounter = 0;\n  let zeroCounter = 0;\n\n  for (let i = 0; i < binaryString.length; i++) {\n    if (binaryString[i] === \"0\") {\n      tempCounter++;\n    }\n    if (binaryString[i] === \"1\") {\n      if (tempCounter > zeroCounter) {\n        zeroCounter = tempCounter;\n      }\n      tempCounter = 0;\n    }\n  }\n\n  return (\n    <>\n      <h3>Your Binary Conversion Is</h3>\n      <h4>{binaryString}</h4>\n      <h3>Which Has a Binary Gap of</h3>\n      <h4>{zeroCounter}</h4>\n    </>\n  );\n};\n\nexport default BinaryGap;\n","import \"./Card.css\";\n\nconst Card = (props) => {\n  return <div className={`${\"card\"} ${props.className}`}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useState, useRef } from \"react\";\nimport BinaryGap from \"./BinaryGap\";\nimport Card from \"./UI/Card\";\nimport \"./BGInput.css\";\n\nconst BGInput = () => {\n  const [enteredNumber, setEnteredNumber] = useState(0);\n  const inputRef = useRef();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    setEnteredNumber(+inputRef.current.value);\n    console.log(typeof enteredNumber);\n  };\n\n  return (\n    <>\n      <Card>\n        <form onSubmit={submitHandler}>\n          <div className=\"input__label\">\n            Input Your Number\n            <input className=\"input\" type=\"number\" ref={inputRef} />\n          </div>\n          <button className=\"submit__button\" type=\"submit\">\n            Submit\n          </button>\n        </form>\n      </Card>\n      <BinaryGap number={enteredNumber} />\n    </>\n  );\n};\n\nexport default BGInput;\n","import BGInput from \"./components/BGInput\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <body>\n      <h1>Binary Gap</h1>\n      <BGInput />\n    </body>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}